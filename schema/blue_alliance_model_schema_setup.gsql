# Blue Alliance Model

// clear the current catalog. 
// It may take a while since it restarts the subsystem services. 
DROP ALL

// create vertex types
# Event Teams
CREATE VERTEX EventTeams (PRIMARY_ID team STRING) WITH primary_id_as_attribute="TRUE"

# Event Matches
CREATE VERTEX EventMatches (
    PRIMARY_ID eventMatchKey STRING, 
    red1 STRING, 
    red2 STRING, 
    red3 STRING, 
    blue1 STRING, 
    blue2 STRING, 
    blue3 STRING, 
    redScore INT, 
    blueScore INT) 
    WITH primary_id_as_attribute="TRUE"

# Event Alliances
CREATE VERTEX EventAlliances (
    PRIMARY_ID allianceId UINT, 
    captain STRING, 
    pick1 STRING, 
    pick2 STRING) 
    WITH primary_id_as_attribute="TRUE"

# Event Rankings
CREATE VERTEX EventRankings (
    PRIMARY_ID rankingId UINT, 
    rank INT, 
    team INT, 
    qs DOUBLE, 
    assist DOUBLE, 
    autoStat DOUBLE, 
    tc DOUBLE, 
    teleop DOUBLE, 
    record STRING, 
 //   dq INT, 
    played INT) 
    WITH primary_id_as_attribute="TRUE"

# Event Awards 
// team - can be null
// awardee - can be null
CREATE VERTEX EventAwards (
    PRIMARY_ID eventAwardKey STRING, 
    awardName STRING, 
    team STRING, 
    awardee STRING) WITH primary_id_as_attribute="TRUE"

// create edge types
CREATE DIRECTED EDGE PARTICIPATES_IN (FROM EventTeams, TO EventMatches) WITH REVERSE_EDGE="PARTICIPATES_IN_REVERSE"
CREATE DIRECTED EDGE HAS_ALLIANCE (FROM EventTeams, TO EventAlliances) WITH REVERSE_EDGE="HAS_ALLIANCE_REVERSE"
CREATE DIRECTED EDGE HAS_RANK (FROM EventTeams, TO EventRankings) WITH REVERSE_EDGE="HAS_RANK_REVERSE"
CREATE DIRECTED EDGE RECIPIENT_OF (FROM EventTeams, TO EventAwards) WITH REVERSE_EDGE="RECIPIENT_OF_REVERSE"

// create graph type
CREATE GRAPH blue_alliance_model (*)

# GSQL script for loading Blue Alliance Model data

USE GRAPH blue_alliance_model
CREATE LOADING JOB load_blue_alliance_model FOR GRAPH blue_alliance_model {
  // define vertex
  // TODO: Edit paths
  DEFINE FILENAME teams_file="../data/2015azch_teams.csv";
  DEFINE FILENAME team_matches_file="../data/2015azch_matches_vertex.csv"; // matches is a keyword in gsql
  DEFINE FILENAME alliances_file="../data/2015azch_alliances_vertex.csv";
  DEFINE FILENAME rankings_file="../data/2015azch_rankings_vertex.csv";
  DEFINE FILENAME awards_file="../data/2015azch_awards_vertex.csv";

  // define edge
  // TODO: Change file names (if needed)
  DEFINE FILENAME participates_in_file="../data/2015azch_matches_edge.csv";
  DEFINE FILENAME has_alliance_file="../data/2015azch_alliances_edge.csv";
  DEFINE FILENAME has_rank_file="../data/2015azch_rankings_edge.csv";
  DEFINE FILENAME recipient_of_file="../data/2015azch_awards_edge.csv";

  // load vertex
  LOAD teams_file TO VERTEX EventTeams VALUES ($0) USING header="true", separator=",";
  LOAD team_matches_file TO VERTEX EventMatches VALUES ($0, $1, $2, $3, $4, $5, $6, $7, $8) USING header="true", separator=",";
  LOAD alliances_file TO VERTEX EventAlliances VALUES ($0, $1, $2, $3) USING header="true", separator=",";
  LOAD rankings_file TO VERTEX EventRankings VALUES ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) USING header="true", separator=",";
  LOAD awards_file TO VERTEX EventAwards VALUES ($0, $1, $2, $3) USING header="true", separator=",";
  
  // load edge
  // TODO: Fix edge files to show actual team relations for matches edge.csv.
  LOAD participates_in_file TO EDGE PARTICIPATES_IN VALUES ($1, $0) USING header="true", separator=",";
  LOAD has_alliance_file TO EDGE HAS_ALLIANCE VALUES ($1, $2) USING header="true", separator=",";
  LOAD has_rank_file TO EDGE HAS_RANK VALUES ($1, $2) USING header="true", separator=",";
  LOAD recipient_of_file TO EDGE RECIPIENT_OF VALUES ($1, $2) USING header="true", separator=",";

}